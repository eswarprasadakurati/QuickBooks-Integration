({
  SynQBO : function(component, event) {
         var action = component.get("c.updateStatus");
          action.setParams({
            oId : component.get("v.recordId")  
        });
        action.setCallback(this, function(response) {   
           var state = response.getState();
            var resp=response.getReturnValue();
            //alert(resp);
            component.set("v.Response",resp);
            $A.util.removeClass(component.find('SucId'), 'slds-hide');
            $A.util.addClass(component.find('SucId'), 'slds-show');
            if(state=='SUCCESS'){
              component.set("v.showSpinner",false);
            	
              //alert(response);
                if(resp=='The product is getting Created in QuickBooks. Please refresh the page multiple times to get the update from Quickbooks. If Product is created successfully, you will see "QuickbooksID" for the product else you will see "QuickBooks Error message" in the related field.'){
                    var message='Product successfully created in QuickBooks. Please refresh the page multiple times to get the update from Quickbooks.';
                    component.set("v.Response",message);
                    var toastEvent = $A.get("e.force:showToast");
                    toastEvent.setParams({
                        "title": "Success!",
                        "message": message,
                        "type":'success'
                    });
                    toastEvent.fire();
                     var dismissActionPanel = $A.get("e.force:closeQuickAction"); 
						dismissActionPanel.fire();
                    var delayInMilliseconds = 2000; //1 second
                    
                    setTimeout(function() {
                        window.location.reload(); 
                        window.location.reload(); 
                    }, delayInMilliseconds);
            /*$A.util.removeClass(component.find('SucIdbackground'), 'slds-theme_error');
            $A.util.addClass(component.find('SucIdbackground'), 'slds-theme_success');
            $A.util.removeClass(component.find('SucId'), 'slds-hide');
            $A.util.addClass(component.find('SucId'), 'slds-show');*/
                }
                else if(resp=='This Product already exists in Quickbooks'){
                    var message='This Product already exists in Quickbooks'
                    var toastEvent = $A.get("e.force:showToast");
                    toastEvent.setParams({
                        "title": "Error!",
                        "message": message,
                        "type":'error'
                    });
                    toastEvent.fire();
                    /*component.set("v.Response",message);
            $A.util.removeClass(component.find('SucIdbackground'), 'slds-theme_success');
            $A.util.addClass(component.find('SucIdbackground'), 'slds-theme_error');     
            $A.util.removeClass(component.find('SucId'), 'slds-hide');
            $A.util.addClass(component.find('SucId'), 'slds-show');*/ 
                    var delayInMilliseconds = 500; //1 second
                    
                    setTimeout(function() {
                        var dismissActionPanel = $A.get("e.force:closeQuickAction"); 
						dismissActionPanel.fire();  
                    }, delayInMilliseconds);
               
            }
               
            }
            else{
                component.set("v.showSpinner",false);
            }
        });
        $A.enqueueAction(action);
   },
     HideSubPopup : function(component, event) {
         $A.util.removeClass(component.find('SucId'), 'slds-show');
                $A.util.addClass(component.find('SucId'), 'slds-hide');
         var dismissActionPanel = $A.get("e.force:closeQuickAction"); 
				dismissActionPanel.fire(); 
     }
})